@model CurrencyApp.Models.Rates;

<div class="container-fluid">
    <div class="row text-center">
        @for (int i = 0; i < CurrencyData.symbols.Count; i++)
        {
            <div class="col-xs-12 col-sm-12 col-lg-12">
                <canvas id="myChart @i")></canvas>
            </div>
        }
    </div>
</div>

<!-- Bootstrap 4 -->
<div class="btn-group">
    <!-- Кнопка -->
    <button type="button" class="btn btn-primary dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
        Выполнить
    </button>
    <!-- Меню -->
    <div class="dropdown-menu">
        <a class="dropdown-item" href="#">Действие 1</a>
        <a class="dropdown-item" href="#">Действие 2</a>
        <a class="dropdown-item" href="#">Действие 3</a>
        <div class="dropdown-divider"></div>
        <a class="dropdown-item" href="#">Действие 4</a>
    </div>
</div>

<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.7.1/Chart.js"></script>

@for (int i=0; i<CurrencyData.symbols.Count; i++)
{
    Random random = new Random();
    int red = random.Next(255);
    int green = random.Next(255);
    int blue = random.Next(255);
    
    <script type="text/javascript">

    var color = "rgb(@red,@green,@blue)";
    var ctx = document.getElementById("myChart "+"@i").getContext('2d');

    var eur = @Html.Raw(Json.Serialize(Rates.currencies[CurrencyData.symbols[i]]));
    var dates = @Html.Raw(Json.Serialize(Rates.availableDates.Select(x => x.ToString("MMMM dd"))));

    var chart = new Chart(ctx, {
        type: 'line',
        data: {
            labels: dates,
            datasets: [{
                label: "@CurrencyData.symbols[i] exchange rate",
                borderColor: color,
                data: eur,
            }]
        },

        options: {
        }
    });

    </script>
}

